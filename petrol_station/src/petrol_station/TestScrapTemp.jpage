/** * FOR TESTING REASONS ONLY; * NOT A CLASS; * DO NOT MODIFY!; */petrol_station.Vehicle v1 = new petrol_station.Truck();petrol_station.Vehicle v2 = new petrol_station.Truck();petrol_station.Vehicle v4 = new petrol_station.Motorbike();
petrol_station.Vehicle v3 = new petrol_station.Small_car();//System.out.println(v3.getDriver());petrol_station.Queue q = new petrol_station.PumpQueue();q.addtoQueue(v1);q.addtoQueue(v2);q.addtoQueue(v3);q.addtoQueue(v4);//System.out.print(q.getQueue().get(0).getDriver());petrol_station.Station station = new petrol_station.Station(2);//System.out.println(station.returnPumps());//////////////////////////////////////////java.util.ArrayList<petrol_station.Pump>pumps = new java.util.ArrayList<petrol_station.Pump>();for(int i = 0; i<2; i++){petrol_station.Pump pump = new petrol_station.Pump();pumps.add(pump);}petrol_station.Small_car cannot be resolved to a typepumps cannot be resolvedpumps cannot be resolvedpumps cannot be resolvedpumps cannot be resolvedpumps cannot be resolved to a variableThe method getVehicleQueue() is undefined for the type LinkedList<Vehicle>petrol_station.Vehicle v1 = new petrol_station.Truck();petrol_station.Vehicle v2 = new petrol_station.Truck();petrol_station.Vehicle v4 = new petrol_station.Motorbike();petrol_station.Vehicle v3 = new petrol_station.Small_car();pumps.get(0).getQueue().addtoQueue(v2);pumps.get(1).getQueue().addtoQueue(v3);pumps.get(1).getQueue().addtoQueue(v2);pumps.get(0).getQueue().addtoQueue(v1);//get pumps/get queues/get vehicles()/for(petrol_station.Pump p: pumps){	System.out.println("Driver mood is: " +p.getQueue().getVehicleQueue().get(0).getDriver().getMood());}
System.out.println(v1.getSizeInQueue());System.out.println(v2.getSizeInQueue());System.out.println(v3.getSizeInQueue());System.out.println(v4.getSizeInQueue());

System.out.println("dddddddd");System.out.println(q.isEmpty(v1));
q.addToQueue(v1);System.out.println(q.isEmpty(v2));
q.addToQueue(v2);System.out.println(q.isEmpty(v3));
q.addToQueue(v3);System.out.println(q.getQueueSize());System.out.println(q.getQueue().size());for(petrol_station.Vehicle obj:q.getQueue()){	System.out.println(obj);}//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////petrol_station.Vehicle v1 = new petrol_station.Truck();petrol_station.Vehicle v2 = new petrol_station.SmallCar();petrol_station.Vehicle v3 = new petrol_station.Truck();petrol_station.Vehicle v4 = new petrol_station.Truck();///////////////////////////////////////////////////////////petrol_station.Station s = new petrol_station.Station(2);s.getLeastOcc().addtoQueue(v1);s.getLeastOcc().addtoQueue(v2);s.getLeastOcc().addtoQueue(v1);s.getLeastOcc().addtoQueue(v2);System.out.println(s.getPump2().getVehicleQueue());System.out.println(s.getPump1().getVehicleQueue());System.out.println(s.getPump2().checkQueueSize());System.out.println(s.getPump1().checkQueueSize());Type mismatch: cannot convert from TruckDriver to VehicleThe method topUpTank() in the type Pump is not applicable for the arguments (Vehicle)petrol_station.Pump p = new petrol_station.Pump();petrol_station.Vehicle v = new petrol_station.Truck();p.topUpTank(v);p.getDriverInfo();